{{>licenseInfo}}
{{#models}}{{#model}}/*
 * {{classname}}.h
 *
 * {{description}}
 */

#ifndef _{{namespace}}_{{classname}}_H_
#define _{{namespace}}_{{classname}}_H_

#include "{{prefix}}Object.h"{{/model}}{{/models}}
{{#imports}}{{{import}}}
{{/imports}}


{{#models}}{{#model}}
namespace {{namespace}} {

class {{classname}}: public {{prefix}}Object {

    {{#vars}}
    {{{datatype}}} {{name}};
    {{/vars}}

    Q_OBJECT

    {{#vars}}
    Q_PROPERTY({{{datatype}}} {{name}} READ {{getter}} WRITE {{setter}})
    {{/vars}}

public:
    {{classname}}(QObject *parent=nullptr);
    virtual ~{{classname}}() override;

    virtual QString asJson () override;
    virtual QJsonObject asJsonObject() override;
    virtual void fromJsonObject(const QJsonObject &json) override;
    virtual void fromJson(const QString &jsonString) override;

    {{#vars}}
    {{{vendorExtensions.paramType}}} {{getter}}() const;
    void {{setter}}({{{vendorExtensions.paramType}}} {{name}});

    {{/vars}}
};

} /* namespace {{namespace}} */

#endif /* _{{namespace}}_{{classname}}_H_ */
{{/model}}
{{/models}}
